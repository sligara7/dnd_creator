version: '3.8'

services:
  # PostgreSQL Database
  database:
    image: postgres:15-alpine
    container_name: dnd_character_db
    environment:
      POSTGRES_DB: dnd_characters
      POSTGRES_USER: dnd_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-change_this_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - dnd_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dnd_user -d dnd_characters"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Character Creator API
  api:
    build: 
      context: .
      dockerfile: Dockerfile.new
    container_name: dnd_character_api
    environment:
      # Database Configuration
      DATABASE_URL: postgresql://dnd_user:${DB_PASSWORD:-change_this_password}@database:5432/dnd_characters
      
      # LLM Configuration - Using GitHub Secrets
      LLM_PROVIDER: ${LLM_PROVIDER:-openai}
      OPENAI_API_KEY_FILE: /run/secrets/openai_api_key
      ANTHROPIC_API_KEY_FILE: /run/secrets/anthropic_api_key
      LLM_MODEL: ${LLM_MODEL:-gpt-4.1-nano-2025-04-14}
      
      # API Configuration
      SECRET_KEY: ${SECRET_KEY:-your-secret-key-change-this-in-production}
      DEBUG: ${DEBUG:-false}
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
      
      # CORS Configuration
      CORS_ORIGINS: ${CORS_ORIGINS:-http://localhost:3000,http://localhost:8080}
      
    ports:
      - "8000:8000"
    depends_on:
      database:
        condition: service_healthy
    networks:
      - dnd_network
    volumes:
      - ./logs:/app/logs
    secrets:
      - openai_api_key
      - anthropic_api_key
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Redis for caching (future enhancement)
  # redis:
  #   image: redis:7-alpine
  #   container_name: dnd_character_cache
  #   ports:
  #     - "6379:6379"
  #   networks:
  #     - dnd_network
  #   healthcheck:
  #     test: ["CMD", "redis-cli", "ping"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 3

  # Optional: nginx reverse proxy (production)
  # nginx:
  #   image: nginx:alpine
  #   container_name: dnd_character_proxy
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf
  #     - ./nginx/ssl:/etc/nginx/ssl
  #   depends_on:
  #     - api
  #   networks:
  #     - dnd_network

volumes:
  postgres_data:

networks:
  dnd_network:
    driver: bridge

# Secrets management for secure API key handling
secrets:
  openai_api_key:
    environment: "OPENAI_API_KEY"
  anthropic_api_key:
    environment: "ANTHROPIC_API_KEY"
