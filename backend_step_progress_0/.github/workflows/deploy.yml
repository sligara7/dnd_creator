name: Build and Deploy D&D Character Creator

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install dependencies
      run: |
        cd backend
        python -m pip install --upgrade pip
        pip install -r requirements-new.txt
    
    - name: Run tests
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
      run: |
        cd backend
        python -m pytest test_backend.py -v

  build:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Podman
      run: |
        sudo apt-get update
        sudo apt-get install -y podman

    - name: Log in to Container Registry
      uses: redhat-actions/podman-login@v1
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix=sha-

    - name: Build image
      id: build
      uses: redhat-actions/buildah-build@v2
      with:
        image: ${{ env.IMAGE_NAME }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        containerfiles: |
          ./backend/Dockerfile.new
        context: ./backend

    - name: Push image
      uses: redhat-actions/push-to-registry@v2
      with:
        image: ${{ steps.build.outputs.image }}
        tags: ${{ steps.build.outputs.tags }}
        registry: ${{ env.REGISTRY }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Podman
      run: |
        sudo apt-get update
        sudo apt-get install -y podman podman-compose

    - name: Deploy with Podman Compose
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
      run: |
        cd backend
        # Create secrets directory
        mkdir -p /tmp/secrets
        echo "$OPENAI_API_KEY" > /tmp/secrets/openai_api_key
        echo "$ANTHROPIC_API_KEY" > /tmp/secrets/anthropic_api_key
        
        # Deploy using podman-compose
        podman-compose -f podman-compose.yml up -d --build
        
        # Clean up secrets
        rm -rf /tmp/secrets
    
    - name: Run health check
      run: |
        sleep 30
        curl -f http://localhost:8000/health || exit 1
