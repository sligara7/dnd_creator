version: '3.8'

services:
  # Message Hub Service
  message_hub:
    build:
      context: ../message_hub
      dockerfile: Dockerfile
    container_name: dnd_message_hub
    environment:
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=postgresql://msg_hub_user:${MSG_HUB_DB_PASSWORD:-change_this_password}@msg_hub_db:5432/msg_hub
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    ports:
      - "8200:8200"
    depends_on:
      redis:
        condition: service_healthy
      msg_hub_db:
        condition: service_healthy
    networks:
      - dnd_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8200/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # LLM Service
  llm_service:
    build:
      context: ../llm_service
      dockerfile: Dockerfile
    container_name: dnd_llm_service
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - REDIS_URL=redis://redis:6379
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    ports:
      - "8100:8100"
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - dnd_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8100/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis for rate limiting and caching
  redis:
    image: redis:7-alpine
    container_name: dnd_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - dnd_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Message Hub Database
  msg_hub_db:
    image: postgres:15-alpine
    container_name: dnd_msg_hub_db
    environment:
      POSTGRES_DB: msg_hub
      POSTGRES_USER: msg_hub_user
      POSTGRES_PASSWORD: ${MSG_HUB_DB_PASSWORD:-change_this_password}
    volumes:
      - msg_hub_db_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - dnd_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U msg_hub_user -d msg_hub"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  redis_data:
  msg_hub_db_data:

networks:
  dnd_network:
    name: dnd_network
    driver: bridge
