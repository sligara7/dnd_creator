"""update_character_model

Revision ID: aeb085e011f4
Revises: 2024_08_31_character_safeguards
Create Date: 2025-08-31 05:56:51.245239

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'aeb085e011f4'
down_revision = '2024_08_31_character_safeguards'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('experience_entries',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('journal_entry_id', sa.UUID(), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.Column('source', sa.String(), nullable=False),
    sa.Column('reason', sa.String(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('session_id', sa.String(), nullable=True),
    sa.Column('data', postgresql.JSONB(astext_type=sa.Text()), server_default='{}', nullable=False),
    sa.ForeignKeyConstraint(['journal_entry_id'], ['journal_entries.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('npc_relationships',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('journal_entry_id', sa.UUID(), nullable=False),
    sa.Column('npc_id', sa.String(), nullable=False),
    sa.Column('npc_name', sa.String(), nullable=False),
    sa.Column('relationship_type', sa.String(), nullable=False),
    sa.Column('standing', sa.Integer(), server_default='0', nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('last_interaction', sa.DateTime(), nullable=True),
    sa.Column('data', postgresql.JSONB(astext_type=sa.Text()), server_default='{}', nullable=False),
    sa.ForeignKeyConstraint(['journal_entry_id'], ['journal_entries.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('quests',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('journal_entry_id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('status', sa.String(), server_default='active', nullable=False),
    sa.Column('importance', sa.String(), server_default='normal', nullable=False),
    sa.Column('assigned_by', sa.String(), nullable=True),
    sa.Column('rewards', postgresql.JSONB(astext_type=sa.Text()), server_default='{}', nullable=False),
    sa.Column('progress', postgresql.JSONB(astext_type=sa.Text()), server_default='[]', nullable=False),
    sa.Column('data', postgresql.JSONB(astext_type=sa.Text()), server_default='{}', nullable=False),
    sa.ForeignKeyConstraint(['journal_entry_id'], ['journal_entries.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # First drop the foreign key constraint that references character_interactions
    op.drop_constraint(op.f('fk_journal_interaction'), 'journal_entries', type_='foreignkey')
    op.drop_column('journal_entries', 'interaction_id')
    
    # Now we can safely drop the character_interactions table
    op.drop_index(op.f('ix_character_interactions_campaign'), table_name='character_interactions')
    op.drop_index(op.f('ix_character_interactions_journal'), table_name='character_interactions')
    op.drop_table('character_interactions')
    
    # Update characters table
    op.add_column('characters', sa.Column('user_id', sa.String(), nullable=False))
    op.add_column('characters', sa.Column('campaign_id', sa.String(), nullable=False))
    op.add_column('characters', sa.Column('character_data', postgresql.JSONB(astext_type=sa.Text()), nullable=False))

    # Drop trigger/function that depend on deleted_at before dropping the column
    op.execute("DROP TRIGGER IF EXISTS tr_prevent_active_character_deletion ON characters")
    op.execute("DROP FUNCTION IF EXISTS prevent_active_character_deletion()")

    op.drop_column('characters', 'deletion_reason')
    op.drop_column('characters', 'experience')
    op.drop_column('characters', 'race')
    op.drop_column('characters', 'campaign_status')
    op.drop_column('characters', 'class_')
    op.drop_column('characters', 'level')
    op.drop_column('characters', 'background')
    op.drop_column('characters', 'alignment')
    op.drop_column('characters', 'deleted_at')
    op.drop_column('characters', 'data')
    
    # Update inventory_items table
    op.drop_index(op.f('ix_inventory_items_character_id'), table_name='inventory_items')
    op.drop_column('inventory_items', 'deletion_reason')
    op.drop_column('inventory_items', 'deleted_at')
    op.drop_column('inventory_items', 'is_active')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('journal_entries', sa.Column('interaction_id', sa.UUID(), autoincrement=False, nullable=True))
    op.create_foreign_key(op.f('fk_journal_interaction'), 'journal_entries', 'character_interactions', ['interaction_id'], ['id'], ondelete='SET NULL')
    op.add_column('inventory_items', sa.Column('is_active', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=False))
    op.add_column('inventory_items', sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('inventory_items', sa.Column('deletion_reason', sa.TEXT(), autoincrement=False, nullable=True))
    op.create_index(op.f('ix_inventory_items_character_id'), 'inventory_items', ['character_id'], unique=False)
    op.add_column('characters', sa.Column('data', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False))
    op.add_column('characters', sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('characters', sa.Column('alignment', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('characters', sa.Column('background', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('characters', sa.Column('level', sa.INTEGER(), server_default=sa.text('1'), autoincrement=False, nullable=False))
    op.add_column('characters', sa.Column('class_', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('characters', sa.Column('campaign_status', sa.VARCHAR(), server_default=sa.text("'inactive'::character varying"), autoincrement=False, nullable=False))
    op.add_column('characters', sa.Column('race', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('characters', sa.Column('experience', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False))
    op.add_column('characters', sa.Column('deletion_reason', sa.TEXT(), autoincrement=False, nullable=True))
    op.drop_column('characters', 'character_data')
    op.drop_column('characters', 'campaign_id')
    op.drop_column('characters', 'user_id')
    op.create_table('character_interactions',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('source_character_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('target_character_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('interaction_type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('campaign_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('journal_entry_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('interaction_data', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=False),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('character_interactions_pkey'))
    )
    op.create_index(op.f('ix_character_interactions_journal'), 'character_interactions', ['journal_entry_id'], unique=False)
    op.create_index(op.f('ix_character_interactions_campaign'), 'character_interactions', ['campaign_id', 'source_character_id', 'target_character_id'], unique=False)
    op.drop_table('quests')
    op.drop_table('npc_relationships')
    op.drop_table('experience_entries')
    # ### end Alembic commands ###
