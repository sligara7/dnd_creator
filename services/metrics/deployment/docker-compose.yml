version: '3.8'

services:
  metrics:
    build:
      context: ..
      dockerfile: Dockerfile
    image: dnd-metrics-service:latest
    container_name: dnd_metrics_service
    environment:
      - PROMETHEUS_SCRAPE_INTERVAL=15
      - PROMETHEUS_EVAL_INTERVAL=15
      - PROMETHEUS_RETENTION_DAYS=15
      - STORAGE_SERVICE_URL=http://storage:8000
      - MESSAGE_HUB_URL=amqp://guest:guest@message-hub:5672/
      - SERVICE_NAME=metrics
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    volumes:
      - prometheus_data:/prometheus
    networks:
      - dnd_network

volumes:
  prometheus_data:

networks:
  dnd_network:
    external: true

version: '3.8'

services:
  metrics:
    build: .
    ports:
      - "8402:8402"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/metrics
      - MESSAGE_HUB_URL=http://message-hub:8200
      - AUTH_SERVICE_URL=http://auth-service:8300
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
    networks:
      - dnd_network

  db:
    image: postgres:15
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=metrics
    volumes:
      - metrics_data:/var/lib/postgresql/data
    networks:
      - dnd_network

  redis:
    image: redis:7
    networks:
      - dnd_network

volumes:
  metrics_data:

networks:
  dnd_network:
    external: true
