[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "storage-service"
version = "0.1.0"
description = "Storage Service for D&D Character Creator - Manages binary assets and content"
authors = ["D&D Creator Team"]
readme = "README.md"
packages = [{include = "storage", from = "src"}]

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.104.0"
uvicorn = {extras = ["standard"], version = "^0.23.0"}
sqlalchemy = "^2.0.20"
alembic = "^1.11.3"
asyncpg = "^0.28.0"
pydantic = {extras = ["email"], version = "^2.3.0"}
pydantic-settings = "^2.0.3"
python-multipart = "^0.0.6"
boto3 = "^1.28.0"
aioboto3 = "^11.3.0"
minio = "^7.1.16"
redis = "^5.0.0"
aioredis = "^2.0.1"
celery = {extras = ["redis"], version = "^5.3.0"}
prometheus-client = "^0.17.1"
python-json-logger = "^2.0.7"
httpx = "^0.24.1"
pillow = "^10.0.0"
aiofiles = "^23.2.1"
tenacity = "^8.2.3"
cryptography = "^41.0.3"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.1.0"
pytest-mock = "^3.11.1"
black = "^23.7.0"
isort = "^5.12.0"
ruff = "^0.0.286"
mypy = "^1.5.1"
ipython = "^8.14.0"
factory-boy = "^3.3.0"
faker = "^19.3.0"
locust = "^2.16.0"
moto = {extras = ["s3"], version = "^4.2.0"}

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | migrations
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.ruff]
line-length = 88
select = ["E", "F", "W", "I", "N", "UP", "S", "B", "A", "C4", "ICN", "PIE", "T20", "SIM", "RET"]
ignore = ["E501", "B008", "S101", "A003", "N805"]
target-version = "py311"

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_unimported = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
check_untyped_defs = true
strict_equality = true

[[tool.mypy.overrides]]
module = ["celery.*", "redis.*", "boto3.*", "minio.*", "aioboto3.*", "aiofiles.*"]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"
addopts = "-v --tb=short --strict-markers"
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "e2e: End-to-end tests",
    "slow: Slow running tests"
]

[tool.coverage.run]
source = ["src/storage"]
branch = true
omit = [
    "*/tests/*",
    "*/migrations/*",
    "*/__init__.py",
    "*/config.py"
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
